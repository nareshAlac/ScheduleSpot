{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/common/AuthGaurdService/auth-gaurd.service.ts","webpack:///./src/app/common/LoggerService/logger.service.ts","webpack:///./src/app/common/LookUpRequestService/lookup-request.service.ts","webpack:///./src/app/common/RootService/root.service.ts","webpack:///./src/app/custom-material/custom-material.module.ts","webpack:///./src/app/dashboard-summary/dashboard-summary.component.css","webpack:///./src/app/dashboard-summary/dashboard-summary.component.html","webpack:///./src/app/dashboard-summary/dashboard-summary.component.ts","webpack:///./src/app/dashboard-summary/dashboard-summary.module.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.module.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.service.ts","webpack:///./src/app/manage-spot-instances/manage-spot-instances.component.css","webpack:///./src/app/manage-spot-instances/manage-spot-instances.component.html","webpack:///./src/app/manage-spot-instances/manage-spot-instances.component.ts","webpack:///./src/app/manage-spot-instances/manage-spot-instances.module.ts","webpack:///./src/app/models/BaseModel.ts","webpack:///./src/app/models/DaysOfWeek.ts","webpack:///./src/app/models/LoginModel.ts","webpack:///./src/app/models/SchedularModel.ts","webpack:///./src/app/models/errorcodes.ts","webpack:///./src/app/schedule-spot-instances/SchedularService.ts","webpack:///./src/app/schedule-spot-instances/schedule-spot-instances.component.css","webpack:///./src/app/schedule-spot-instances/schedule-spot-instances.component.html","webpack:///./src/app/schedule-spot-instances/schedule-spot-instances.component.ts","webpack:///./src/app/schedule-spot-instances/schedule-spot-instances.module.ts","webpack:///./src/app/side-bar/side-bar.component.css","webpack:///./src/app/side-bar/side-bar.component.html","webpack:///./src/app/side-bar/side-bar.component.ts","webpack:///./src/app/side-bar/side-bar.module.ts","webpack:///./src/app/signout/signout.component.css","webpack:///./src/app/signout/signout.component.html","webpack:///./src/app/signout/signout.component.ts","webpack:///./src/app/signout/signout.module.ts","webpack:///./src/app/spot-request-predictor/spot-request-predictor.component.css","webpack:///./src/app/spot-request-predictor/spot-request-predictor.component.html","webpack:///./src/app/spot-request-predictor/spot-request-predictor.component.ts","webpack:///./src/app/spot-request-predictor/spot-request-predictor.module.ts","webpack:///./src/app/title-bar/title-bar.component.css","webpack:///./src/app/title-bar/title-bar.component.html","webpack:///./src/app/title-bar/title-bar.component.ts","webpack:///./src/app/title-bar/title-bar.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {LoginComponent} from './login/login.component';\nimport {DashboardComponent} from './dashboard/dashboard.component';\nimport {AuthGaurdService} from './common/AuthGaurdService/auth-gaurd.service';\nimport {ManageSpotInstancesComponent} from \"./manage-spot-instances/manage-spot-instances.component\";\nimport {SpotRequestPredictorComponent} from \"./spot-request-predictor/spot-request-predictor.component\";\nimport {DashboardSummaryComponent} from \"./dashboard-summary/dashboard-summary.component\";\nimport {ScheduleSpotInstancesComponent} from './schedule-spot-instances/schedule-spot-instances.component';\nimport {SignoutComponent} from './signout/signout.component';\n\nconst routes = [\n  {\n    path: '',\n    redirectTo: 'login',\n    pathMatch: 'full'\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: 'dashBoardSummary',\n        pathMatch: 'full'\n      },\n      {\n        path: 'manageSpotInstances',\n        component: ManageSpotInstancesComponent\n      },\n      {\n        path: 'spotInstancePredictor',\n        component: SpotRequestPredictorComponent\n      },\n      {\n        path: 'dashBoardSummary',\n        component: DashboardSummaryComponent\n      },\n      {\n        path: 'scheduleSpotInstances',\n        component: ScheduleSpotInstancesComponent\n      },\n      {\n        path: 'signout',\n        component: SignoutComponent\n      }\n\n    ],\n    canActivate: [AuthGaurdService]\n  },\n  {\n    path: '**',\n    component: LoginComponent\n  }\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"\"","module.exports = \"<app-title-bar></app-title-bar>\\n<router-outlet></router-outlet>\\n<ngx-spinner\\n  bdColor=\\\"rgba(51,51,51,0.8)\\\"\\n  size=\\\"medium\\\"\\n  color=\\\"#fff\\\"\\n  type=\\\"ball-circus\\\">\\n  <p style=\\\"font-size: 20px; color: white\\\">Loading...</p>\\n</ngx-spinner>\\n<mat-divider></mat-divider>\\n<div style=\\\"margin-left: 40%;font-size: small\\\">\\n  <footer>\\n    <em>© Copyright 2018 Alacriti, Inc. All Rights Reserved.</em>\\n  </footer>\\n</div>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Spotify';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {AppComponent} from './app.component';\nimport {LoginModule} from './login/login.module';\nimport {CustomMaterialModule} from './custom-material/custom-material.module';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {AppRoutingModule} from './app-routing.module';\nimport {LoggerService} from './common/LoggerService/logger.service';\nimport {HttpClientModule} from '@angular/common/http';\nimport {DashboardModule} from './dashboard/dashboard.module';\nimport {TitleBarModule} from './title-bar/title-bar.module';\nimport {SideBarModule} from './side-bar/side-bar.module';\nimport {ManageSpotInstancesModule} from './manage-spot-instances/manage-spot-instances.module';\nimport {SpotRequestPredictorModule} from './spot-request-predictor/spot-request-predictor.module';\nimport {DashboardSummaryModule} from \"./dashboard-summary/dashboard-summary.module\";\nimport {ScheduleSpotInstancesModule} from './schedule-spot-instances/schedule-spot-instances.module';\nimport {SignoutModule} from './signout/signout.module';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    LoginModule,\n    CustomMaterialModule,\n    DashboardModule,\n    TitleBarModule,\n    SideBarModule,\n    SpotRequestPredictorModule,\n    ManageSpotInstancesModule,\n    DashboardSummaryModule,\n    ScheduleSpotInstancesModule,\n    SignoutModule,\n    NgxSpinnerModule\n\n  ],\n  providers: [\n    LoggerService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {RootService} from '../RootService/root.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGaurdService implements CanActivate {\n\n  constructor(private rootService: RootService,\n              private router: Router) {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.rootService.loginSuccessfull) {\n      return true;\n    } else {\n      this.router.navigate(['/login'])\n      return false;\n    }\n\n  }\n}\n","import {Injectable} from '@angular/core';\n\n\n@Injectable()\nexport class LoggerService {\n\n  info(message: any) {\n      console.info(message);\n  }\n\n  debug(message: any) {\n      console.debug(message);\n  }\n\n  warn(message: any) {\n      console.warn(message);\n  }\n\n  error(message: any) {\n      console.error(message);\n  }\n}\n","import {Injectable, OnDestroy} from '@angular/core';\nimport {HttpClient, HttpResponse} from '@angular/common/http';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {FormControl} from '@angular/forms';\nimport {BaseModel} from '../../models/BaseModel';\nimport {LoggerService} from '../LoggerService/logger.service';\nimport {Errorcodes} from '../../models/errorcodes';\nimport {environment} from '../../../environments/environment';\nimport {SchedularModel} from '../../models/SchedularModel';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LookupRequestService {\n  lookupEventData: BehaviorSubject<any>;\n  handlerNameList = [];\n  selectHanlder: string;\n  selectedEventIdName: string;\n  displayTable: boolean;\n  eventHandlerName: FormControl;\n  constructor(private http: HttpClient,\n              private logger: LoggerService) {\n    this.lookupEventData = new BehaviorSubject<any>(new Array());\n  }\n  getEvents(msg: Object): any {\n    let resultData;\n    const url = environment.baseUrl + 'a';\n    this.http.post(url, msg).subscribe(data => {\n       resultData = <SchedularModel> data;\n      if (resultData.errorCodes !== undefined) {\n        /** this.alertService.handleBackenedErrors(resultData.errorCodes) ;*/\n      } else if (resultData.eventList.length <= 0) {\n        const errorCode = new Errorcodes();\n        errorCode.code = 1010;\n        errorCode.msg = 'No Record Found for this search criteria';\n/** //this.resultsTableService.displayTable.next(false) ;*/\n      } else {\n        /** //this.resultsTableService.resultsdata.next(resultData.eventList);*/\n        /** //this.resultsTableService.displayTable.next(true);*/\n        this.handlerNameList = resultData.handlerList; }});\n  }\n  getEventList(msg: BaseModel) {\n    const url = environment.baseUrl + '/rest/spot/getrequestlist';\n    return this.http.post(url, msg).toPromise();\n  }\n}\n","import {Injectable} from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RootService {\n  loginSuccessfull: boolean;\n  userId: number;\n\n  constructor() {\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MatCardModule} from '@angular/material/card';\nimport {\n  MatButtonModule,\n  MatDividerModule, MatDrawerContainer, MatIconModule,\n  MatInputModule, MatListModule, MatProgressBarModule,\n  MatProgressSpinner, MatSelectModule,\n  MatSidenavModule,\n  MatSpinner,\n   MatTableModule, MatPaginatorModule\n} from '@angular/material';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatInputModule,\n    MatSidenavModule,\n    MatSelectModule,\n    MatListModule,\n    MatIconModule,\n    MatProgressBarModule,\n    MatTableModule, MatPaginatorModule\n  ],\n  declarations: [],\n  exports: [\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatInputModule,\n    MatSidenavModule,\n    MatSelectModule,\n    MatListModule,\n    MatIconModule,\n    MatProgressBarModule,\n    MatTableModule,\n    MatPaginatorModule\n  ]\n})\nexport class CustomMaterialModule {\n}\n","module.exports = \".cta-button-primary.th {\\n  font-size: medium;\\n  font-weight: bold;\\n}\\n.mat-table {\\n  display: table;\\n  width:100%;\\n  background: #FFFCF3;\\n  padding-bottom: 10px;\\n}\\n.mat-header-row {\\n  display: flex;\\n  vertical-align: middle;\\n  text-align: center;\\n  background: rgba(237, 171, 20, 0.53);\\n  line-: 20px;\\n}\\n.mat-header-cell {\\n  font-size: small;\\n  font-weight: bold;\\n}\\nmat-cell, mat-footer-cell, mat-header-cell {\\n  flex: 1;\\n  display: flex;\\n  align-items: center;\\n  overflow: hidden;\\n  width: 17px;\\n  padding-left: 15px;\\n  margin-left: 12px;\\n}\\n.get-details-btn-primary {\\n  background-color: #4bb08b;\\n  box-shadow: 0 2px 1px -1px rgba(66,133,244,.2), 0 1px 1px 0 rgba(66,133,244,.14), 0 1px 3px 0 rgba(66,133,244,.12);\\n  color: white;\\n}\\n\"","module.exports = \"<div id=\\\"searchResults\\\">\\n  <h2 class=\\\"mat-h2\\\">Configured Spot Requests</h2>\\n  <div class=\\\"searchtable mat-elevation-z8\\\">\\n    <mat-table #table [dataSource]=\\\"dataSource\\\">\\n      <div *ngFor=\\\"let col of displayedColumns;let i = index\\\">\\n        <ng-container matColumnDef={{col}}>\\n          <mat-header-cell *matHeaderCellDef>\\n            <div [innerHtml]=\\\"col\\\" class=\\\"mat-header-cell\\\">\\n            </div>\\n          </mat-header-cell>\\n          <div *ngIf=\\\"col==='Actions'\\\">\\n            <mat-cell *matCellDef=\\\"let element\\\" (click)=\\\"redirectToLogDetails(element.eventLogId);\\\">\\n              <button  name=\\\"getDetails\\\" mat-raised-button class=\\\"cta-button-primary\\\">Details</button>\\n            </mat-cell>\\n          </div>\\n          <div *ngIf=\\\"col!='Action'\\\">\\n            <mat-cell *matCellDef=\\\"let element\\\">\\n              <div>\\n                {{element[col]}}\\n              </div>\\n            </mat-cell>\\n          </div>\\n        </ng-container>\\n      </div>\\n      <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n      <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n    </mat-table>\\n    <mat-paginator id=\\\"paginator\\\" #paginator [length]=\\\"20\\\" [pageSize]=\\\"5\\\" [pageSizeOptions]=\\\"[2, 5, 10]\\\">\\n    </mat-paginator>\\n  </div>\\n</div>\\n\"","import {Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {MatPaginator, MatTableDataSource} from '@angular/material';\nimport {LoggerService} from '../common/LoggerService/logger.service';\nimport {Router} from '@angular/router';\nimport {RootService} from '../common/RootService/root.service';\nimport {LookupRequestService} from '../common/LookUpRequestService/lookup-request.service';\nimport {BaseModel} from '../models/BaseModel';\nimport {SchedularModel} from '../models/SchedularModel';\nimport {NgxSpinnerService} from 'ngx-spinner';\n\n@Component({\n  selector: 'app-dashboard-summary',\n  templateUrl: './dashboard-summary.component.html',\n  styleUrls: ['./dashboard-summary.component.css']\n})\nexport class DashboardSummaryComponent implements OnInit {\n  gridDefinitionList: string[];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n   eventSearchResultData: Array<any>;\n  displayedColumns: string[];\n  dataSource = new MatTableDataSource();\n\n  constructor(private log: LoggerService,\n              private router: Router, private rootService: RootService, private lookupRequestService: LookupRequestService, private spinner: NgxSpinnerService) { }\n\n  ngOnInit() {\n    this.log.debug('ngOnInit ****** LookupLogsSearchResultTableComponent');\n    this.log.debug(this.eventSearchResultData);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource = new MatTableDataSource();\n    this.getEventLogsList();\n  }\n  private assignPagination() {\n    this.dataSource.paginator = this.paginator;\n  }\n  private initalizeLookUpEventLogsData() {\n    if (this.eventSearchResultData.length > 0) {\n      this.dataSource.data = new Array();\n      this.gridDefinitionList = ['S.No', 'AMI ID', 'Instance Type', 'Security Group', 'No .of Instances'];\n    }\n    this.displayedColumns = new Array();\n    for (const grid of this.gridDefinitionList) {\n      this.displayedColumns.push(grid);\n    }\n    // this.dataSource = this.resultsTableService.resultsdata;\n    let count = 0;\n    for (const result of this.eventSearchResultData) {\n      const rowEntry = {\n        key: '',\n        value: ''\n      };\n      rowEntry['S.No'] = ++count;\n      rowEntry['AMI ID'] = result.amiId;\n      rowEntry['Instance Type'] = result.instanceType;\n      rowEntry['Security Group'] = result.securityGroup;\n      rowEntry['No .of Instances'] = result.numOfInstances;\n      this.dataSource.data.push(rowEntry);\n    }\n  }\n\n  public redirectToLogDetails(eventLogId: number) {\n    this.log.debug('redirectToLogDetails : ' + eventLogId);\n    this.router.navigate(['/userHome/lookup-event-logs-details' , eventLogId]);\n  }\n  public getEventLogsList() {\n    const msg = new BaseModel();\n    msg.userId = this.rootService.userId;\n    this.spinner.show();\n    this.lookupRequestService.getEventList(msg).then((resp) => {\n      this.log.debug('Response for getEventLogsList');\n      this.log.debug(resp);\n      this.spinner.hide();\n      const data = <Array<SchedularModel>> resp;\n      this.log.debug(data);\n      /**if (data.errorCodes != null && data.errorCodes !== undefined) {\n        this.alertService.handleBackenedErrors(data.errorCodes);\n      } else {*/\n        this.eventSearchResultData = data;\n        this.initalizeLookUpEventLogsData();\n        this.assignPagination();\n     /** }*/\n    }).catch((err) => {\n      this.log.debug(err);\n      this.router.navigate(['/userHome/access-denied']);\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardSummaryComponent } from './dashboard-summary.component';\nimport {CustomMaterialModule} from '../custom-material/custom-material.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CustomMaterialModule\n  ],\n  declarations: [DashboardSummaryComponent]\n})\nexport class DashboardSummaryModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"dashboard\\\">\\n  <mat-drawer-container style=\\\"overflow: initial\\\" class=\\\"sidebar-style\\\" [hasBackdrop]=\\\"false\\\" disableClose>\\n    <div>\\n  <app-side-bar></app-side-bar>\\n    </div>\\n  <div class=\\\"router-outlet-style\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n  </mat-drawer-container>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {LoggerService} from '../common/LoggerService/logger.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private log: LoggerService) { }\n\n  ngOnInit() {\n    this.log.debug('Dashboard Loaded!!!');\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {DashboardComponent} from './dashboard.component';\nimport {CustomMaterialModule} from '../custom-material/custom-material.module';\nimport {SideBarModule} from '../side-bar/side-bar.module';\nimport {TitleBarModule} from '../title-bar/title-bar.module';\nimport {RouterModule} from '@angular/router';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CustomMaterialModule,\n    SideBarModule,\n    RouterModule\n  ],\n  declarations: [\n    DashboardComponent\n  ],\n  exports: [\n    DashboardComponent\n  ]\n})\nexport class DashboardModule { }\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\"","module.exports = \"<mat-progress-bar mode=\\\"determinate\\\" value=\\\"40\\\"></mat-progress-bar>\\n\\n<mat-card class=\\\"login-card\\\">\\n  <mat-card-header>\\n    <mat-card-title>Login</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n    <form class=\\\"example-form\\\" [formGroup]=\\\"loginForm\\\">\\n      <table class=\\\"example-full-width\\\" cellspacing=\\\"0\\\">\\n        <tr>\\n          <td>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Username\\\" formControlName=\\\"username\\\" name=\\\"username\\\" required>\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n        <tr>\\n          <td>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n              <input matInput placeholder=\\\"Password\\\" formControlName=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\"\\n                     required>\\n            </mat-form-field>\\n          </td>\\n        </tr>\\n      </table>\\n    </form>\\n    <!--<mat-spinner [style.display]=\\\"showSpinner ? 'block' : 'none'\\\"></mat-spinner>-->\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-raised-button (click)=\\\"loginUser()\\\" color=\\\"primary\\\">Login</button>\\n  </mat-card-actions>\\n\\n</mat-card>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {LoginModel} from '../models/LoginModel';\nimport {LoginService} from './login.service';\nimport {LoggerService} from '../common/LoggerService/logger.service';\nimport {Router} from '@angular/router';\nimport {RootService} from '../common/RootService/root.service';\nimport {BaseModel} from '../models/BaseModel';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  username = new FormControl('');\n  password = new FormControl('');\n\n  constructor(private loginService: LoginService,\n              private log: LoggerService,\n              private router: Router,\n              private rootService: RootService,\n              private spinner: NgxSpinnerService ) {\n    this.loginForm = new FormGroup({\n      username: this.username,\n      password: this.password\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  loginUser() {\n    this.log.debug('Login button clicked');\n    this.log.debug('Username : ' + this.username.value);\n    this.log.debug('Password : ' + this.password.value);\n    const msg = new LoginModel();\n    msg.userName = this.username.value;\n    msg.password = this.password.value;\n    this.spinner.show();\n    this.loginService.loginUser(msg)\n      .then((resp) => {\n        this.log.debug('Success Response from Login Request');\n        this.log.debug(resp);\n        const data = <LoginModel>resp;\n        this.log.debug(data.isValidUser);\n        this.log.debug(data);\n        setTimeout(() => {\n          /** spinner ends after 5 seconds */\n          this.spinner.hide();\n        }, 2000);\n        if(data.isValidUser)\n        {\n          this.rootService.loginSuccessfull = true;\n          this.log.debug('Redirecting to Dashboard');\n          this.router.navigate(['/dashboard']);\n        }\n      })\n      .catch((err) => {\n        this.log.debug('Error Response from Login Request');\n        this.log.debug(err);\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login.component';\nimport {CustomMaterialModule} from \"../custom-material/custom-material.module\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {LoginService} from \"./login.service\";\nimport {HttpClientModule} from \"@angular/common/http\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    CustomMaterialModule,\n    HttpClientModule\n  ],\n  declarations: [LoginComponent],\n  exports: [\n    LoginComponent\n  ],\n  providers: [\n    LoginService,\n  ]\n})\nexport class LoginModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {LoginModel} from '../models/LoginModel';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class LoginService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  loginUser(msg: any) {\n  const url = environment.baseUrl + '/rest/user/login';\n    console.log(JSON.stringify(msg));\n    return this.http.post(url, msg).toPromise();\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  manage-spot-instances works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-manage-spot-instances',\n  templateUrl: './manage-spot-instances.component.html',\n  styleUrls: ['./manage-spot-instances.component.css']\n})\nexport class ManageSpotInstancesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ManageSpotInstancesComponent } from './manage-spot-instances.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [ManageSpotInstancesComponent]\n})\nexport class ManageSpotInstancesModule { }\n","import {Errorcodes} from './errorcodes';\n\nexport class BaseModel {\n  responseMessage: string;\n  userId: number;\n  errorCodes: Array<Errorcodes>;\n}\n","export enum DaysOfWeek {\n  Sunday = 0,\n  Monday,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday\n}\n","import {BaseModel} from './BaseModel';\n\nexport class LoginModel extends BaseModel{\n  userName: string;\n  password: string;\n  isValidUser: boolean;\n}\n","import {BaseModel} from './BaseModel';\n\nexport class SchedularModel extends BaseModel{\n  regions: string[];\n  bidPrice: string;\n  numOfInstances: number;\n  instanceTypes: string[];\n  amiIds: object[];\n  securityGroups: string[];\n  sshKeyPairs: string;\n\n  region: string;\n  instanceType: string;\n  amiId: string;\n  securityGroup: string;\n  sshKeyPair: string;\n  list: SchedularModel[];\n\n  scheduleStartDate: any;\n  scheduleEndDate: any;\n  scheduleDays: any;\n}\n","export class Errorcodes {\n  code: number;\n  msg: string;\n  type: number;\n}\n","import {HttpClient} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport {Injectable} from '@angular/core';\n\n@Injectable()\nexport class SchedularService {\n  constructor(private http: HttpClient) {\n  }\n\n  scheduleSpotInstances(schedular: any) {\n    const url = environment.baseUrl + '/rest/spot/schedule';\n    console.log(JSON.stringify(schedular));\n    return this.http.post(url, schedular).toPromise();\n  }\n\n  createSpotSchedule() {\n    const url = environment.baseUrl + '/rest/spot/createschedule';\n    // console.log(JSON.stringify(schedular));\n    return this.http.get(url).toPromise();\n    // return this.http.post(url, '').toPromise();\n  }\n}\n","module.exports = \".example-form {\\n  min-width: 150px;\\n  max-width: 500px;\\n  width: 100%;\\n}\\n\\n.example-full-width {\\n  width: 100%;\\n}\\n\\n\"","module.exports = \"<mat-card class=\\\"schedular-card\\\">\\n  <mat-card-header>\\n    <mat-card-title>ScheduleSpotInstance</mat-card-title>\\n  </mat-card-header>\\n  <mat-card-content>\\n<form class=\\\"example-form\\\" [formGroup]=\\\"schedularForm\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <mat-select placeholder=\\\"Region\\\" formControlName=\\\"region\\\" required>\\n      <mat-option *ngFor=\\\"let region of regions\\\" [value]=\\\"region\\\">\\n        {{region}}\\n      </mat-option>\\n    </mat-select>\\n    <!--input matInput placeholder=\\\"\\\" formControlName=\\\"bidPrice\\\" name=\\\"bidPrice\\\"-->\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <mat-select placeholder=\\\"Instance Type\\\" formControlName=\\\"instanceType\\\" required>\\n      <mat-option *ngFor=\\\"let instanceType of instanceTypes\\\" [value]=\\\"instanceType\\\">\\n        {{instanceType}}\\n      </mat-option>\\n    </mat-select>\\n    <!--textarea matInput placeholder=\\\"Instance Type\\\" formControlName=\\\"instanceType\\\" name=\\\"instanceType\\\"></textarea-->\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <textarea matInput placeholder=\\\"Number of Instances\\\" formControlName=\\\"numOfInstances\\\" name=\\\"numOfInstances\\\"></textarea>\\n  </mat-form-field>\\n\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n      <!--mat-select placeholder=\\\"AMI ID\\\" [formControl]=\\\"animalControl\\\" required-->\\n    <mat-select placeholder=\\\"AMI ID\\\" formControlName=\\\"amiId\\\" required>\\n        <!--mat-option>--</mat-option -->\\n        <mat-option *ngFor=\\\"let amiId of amiIds\\\" [value]=\\\"amiId\\\">\\n          {{amiId}}\\n        </mat-option>\\n    </mat-select>\\n      <!--mat-error *ngIf=\\\"animalControl.hasError('required')\\\">Please choose an animal</mat-error>\\n      <mat-hint>{{animalControl.value?.sound}}</mat-hint-->\\n  </mat-form-field>\\n  <!--textarea-- matInput placeholder=\\\"AMI ID\\\" formControlName=\\\"amiId\\\" name=\\\"amiId\\\"></textarea-->\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <mat-select placeholder=\\\"Security Group\\\" formControlName=\\\"securityGroup\\\" required>\\n      <mat-option *ngFor=\\\"let securityGroup of securityGroups\\\" [value]=\\\"securityGroup\\\">\\n        {{securityGroup}}\\n      </mat-option>\\n    </mat-select>\\n    <!--textarea matInput placeholder=\\\"Security Group\\\" formControlName=\\\"securityGroup\\\" name=\\\"securityGroup\\\"></textarea-->\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <!--textarea matInput placeholder=\\\"SSH KeyPair\\\" [formControlName]=\\\"sshKeyPairs\\\" name=\\\"sshKeyPair\\\"></textarea-->\\n    <mat-select placeholder=\\\"SSH Key Pair\\\" formControlName=\\\"sshKeyPair\\\" required>\\n      <mat-option *ngFor=\\\"let sshKeyPair of sshKeyPairs\\\" [value]=\\\"sshKeyPair\\\">\\n        {{sshKeyPair}}\\n      </mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput placeholder=\\\"Bid Price\\\" formControlName=\\\"bidPrice\\\" name=\\\"bidPrice\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <!--label>Schedule Start Date/Time</label-->\\n    <input matInput mdc-datetime-picker=\\\"\\\" date=\\\"true\\\" time=\\\"true\\\" type=\\\"text\\\" placeholder=\\\"Schedule Start Date/Time\\\" max-date=\\\"dateTimeEnd\\\" ng-model=\\\"dateTimeStart\\\" readonly=\\\"readonly\\\" id=\\\"input_0\\\" formControlName=\\\"scheduleStartDate\\\">\\n    <!--div class=\\\"md-errors-spacer\\\"></div-->\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput mdc-datetime-picker=\\\"\\\" date=\\\"true\\\" time=\\\"true\\\" type=\\\"text\\\" placeholder=\\\"Schedule End Date/Time\\\" max-date=\\\"dateTimeEnd\\\" ng-model=\\\"dateTimeStart\\\" readonly=\\\"readonly\\\" id=\\\"input_1\\\" formControlName=\\\"scheduleEndDate\\\">\\n    <!--input time=\\\"false\\\" date=\\\"true\\\" mdc-datetime-picker=\\\"\\\" type=\\\"text\\\" id=\\\"date\\\" placeholder=\\\"Schedule End Date\\\" ng-model=\\\"date\\\" min-date=\\\"minDate\\\" max-date=\\\"maxDate\\\" class=\\\" md-input\\\" readonly=\\\"readonly\\\" formControlName=\\\"scheduleEndDate\\\"-->\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <mat-select placeholder=\\\"Days of Week\\\" formControlName=\\\"scheduleDays\\\" multiple>\\n      <mat-option *ngFor=\\\"let day of keys(daysOfWeek)\\\" [value]=\\\"day\\\">{{daysOfWeek[day]}}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n\\n</form>\\n\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-raised-button (click)=\\\"schedule()\\\" color=\\\"primary\\\">Schedule</button>\\n  </mat-card-actions>\\n\\n</mat-card>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {LoggerService} from '../common/LoggerService/logger.service';\nimport {RootService} from '../common/RootService/root.service';\nimport {BaseModel} from '../models/BaseModel';\nimport {SchedularModel} from '../models/SchedularModel';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {SchedularService} from './SchedularService';\nimport {Router} from '@angular/router';\nimport {DaysOfWeek} from '../models/DaysOfWeek';\nimport {LoginModel} from '../models/LoginModel';\nimport {NgxSpinnerService} from 'ngx-spinner';\n\n\n@Component({\n  selector: 'app-schedule-spot-instances',\n  templateUrl: './schedule-spot-instances.component.html',\n  styleUrls: ['./schedule-spot-instances.component.css']\n})\nexport class ScheduleSpotInstancesComponent implements OnInit {\n  schedularForm: FormGroup;\n  bidPrice = new FormControl('');\n  region = new FormControl('');\n  instanceType = new FormControl('');\n  amiId = new FormControl('');\n  securityGroup = new FormControl('');\n  sshKeyPair = new FormControl('');\n\n  scheduleStartDate = new FormControl('');\n  scheduleEndDate = new FormControl('');\n  scheduleDays = new FormControl('');\n  numOfInstances = new FormControl('');\n\n  regions: string[];\n  sshKeyPairs: string[];\n  instanceTypes: string[];\n  amiIds: string[];\n  securityGroups: string[];\n\n  keys = Object.keys;\n  daysOfWeek = DaysOfWeek;\n\n\n  constructor(private schedularService: SchedularService,\n              private log: LoggerService,\n              private router: Router,\n              private rootService: RootService,\n              private spinner: NgxSpinnerService) {\n    this.schedularForm = new FormGroup({\n      bidPrice: this.bidPrice,\n      region: this.region,\n      instanceType: this.instanceType,\n      amiId: this.amiId,\n      numOfInstances: this.numOfInstances,\n      securityGroup: this.securityGroup,\n      sshKeyPair: this.sshKeyPair,\n      scheduleStartDate: this.scheduleStartDate,\n      scheduleEndDate: this.scheduleEndDate,\n      scheduleDays: this.scheduleDays,\n    });\n  }\n\n  ngOnInit() {\n    this.spinner.show();\n  this.schedularService.createSpotSchedule()\n  .then((resp) => {\n    this.log.debug('Success Response from create schedule Request');\n    this.log.debug(resp);\n    this.spinner.hide();\n  })\n  .catch((err) => {\n    this.log.debug('Error Response from create schedule Request');\n    this.log.debug(err);\n    this.spinner.hide();\n  });\n  }\n\n\n  schedule() {\n    this.log.debug('schedule button clicked');\n    this.log.debug('bidPrice : ' + this.bidPrice.value);\n    this.log.debug('instanceType : ' + this.instanceType.value);\n    this.log.debug('daysOfWeek : ' + this.scheduleDays.value);\n    const schedular = new SchedularModel();\n    schedular.region = this.region.value;\n    schedular.bidPrice = this.bidPrice.value;\n    schedular.instanceType = this.instanceType.value;\n    schedular.amiId = this.amiId.value;\n    schedular.numOfInstances = this.numOfInstances.value;\n    schedular.securityGroup = this.securityGroup.value;\n    schedular.sshKeyPair = this.sshKeyPair.value;\n    schedular.scheduleDays = this.scheduleDays.value;\n    this.schedularService.scheduleSpotInstances(schedular)\n      .then((resp) => {\n        this.log.debug('Success Response from Schedule Spot Request');\n        this.log.debug(resp);\n        const data = <BaseModel>resp;\n        this.log.debug(data.responseMessage);\n        this.rootService.loginSuccessfull = true;\n        this.log.debug('Redirecting to Dashboard');\n        this.router.navigate(['/dashboard']);\n      })\n      .catch((err) => {\n        this.log.debug('Error Response from Schedule Spot Request');\n        this.log.debug(err);\n      });\n  }\n\n\n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScheduleSpotInstancesComponent } from './schedule-spot-instances.component';\nimport {CustomMaterialModule} from '../custom-material/custom-material.module';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport {LoginComponent} from '../login/login.component';\nimport {SchedularService} from './SchedularService';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CustomMaterialModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    HttpModule\n  ],\n  declarations: [ScheduleSpotInstancesComponent],\n  exports: [\n    ScheduleSpotInstancesComponent\n  ],\n  providers: [\n    SchedularService\n  ]\n})\nexport class ScheduleSpotInstancesModule { }\n","module.exports = \"\"","module.exports = \"\\n  <mat-drawer #drawer opened=\\\"\\\">\\n    <mat-list>\\n      <mat-list-item (click)=\\\"toggleTimeline(1)\\\">\\n        <mat-icon matListIcon>dashboard</mat-icon>\\n        <h3 matLine>DashBoard</h3>\\n      </mat-list-item>\\n      <!-- <mat-list-item (click)=\\\"toggleTimeline(2)\\\">\\n         <mat-icon matListIcon>filter_list</mat-icon>\\n         <h3 matLine>Manage Spot Instances</h3>\\n       </mat-list-item>-->\\n       <!--<mat-list-item (click)=\\\"toggleTimeline(3)\\\">\\n         <mat-icon matListIcon>opacity</mat-icon>\\n         <h3 matLine>Spot Request Predictor</h3>\\n       </mat-list-item>-->\\n      <!--mat-list-item (click)=\\\"toggleTimeline(4)\\\">\\n        <mat-icon matListIcon>opacity</mat-icon>\\n        <h3 matLine>Schedule Spot Requests</h3>\\n      </mat-list-item-->\\n      <mat-list-item (click)=\\\"toggleTimeline(4)\\\">\\n        <mat-icon matListIcon>add_circle_outline</mat-icon>\\n        <h3 matLine>Schedule Spot Instances</h3>\\n      </mat-list-item>\\n      <mat-list-item (click)=\\\"toggleTimeline(5)\\\">\\n        <mat-icon matListIcon>exit_to_app</mat-icon>\\n        <h3 matLine>SignOut</h3>\\n      </mat-list-item>\\n    </mat-list>\\n  </mat-drawer>\\n  <button mat-raised-button (click)=\\\"drawer.toggle()\\\">Toggle drawer</button>\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {LoggerService} from '../common/LoggerService/logger.service';\nimport {Router} from '@angular/router';\nimport {NgxSpinnerService} from 'ngx-spinner';\n\n@Component({\n  selector: 'app-side-bar',\n  templateUrl: './side-bar.component.html',\n  styleUrls: ['./side-bar.component.css']\n})\nexport class SideBarComponent implements OnInit {\n\n  constructor(private log: LoggerService,\n              private router: Router,\n              private spinner: NgxSpinnerService) {\n  }\n\n  ngOnInit() {\n  }\n\n  toggleTimeline(id: number) {\n    this.log.debug('ID Pressed :' + id);\n    switch (id) {\n      case 1:\n        this.spinner.show();\n        this.router.navigate(['/dashboard/dashBoardSummary']);\n        this.spinner.hide();\n        break;\n      case 2:\n        this.spinner.show();\n        this.router.navigate(['/dashboard/manageSpotInstances']);\n        this.spinner.hide();\n        break;\n      case 3:\n        this.spinner.show();\n        this.router.navigate(['/dashboard/spotInstancePredictor']);\n        this.spinner.hide();\n        break;\n      case 4:\n        this.spinner.show();\n        this.router.navigate(['/dashboard/scheduleSpotInstances']);\n        this.spinner.hide();\n        break;\n      case 5:\n        this.spinner.show();\n        this.router.navigate(['/login']);\n        this.spinner.hide();\n        break;\n      default:\n        return;\n    }\n  }\n\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {CustomMaterialModule} from '../custom-material/custom-material.module';\nimport {SideBarComponent} from './side-bar.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CustomMaterialModule\n  ],\n  declarations: [\n    SideBarComponent\n  ],\n  exports: [\n    SideBarComponent\n  ]\n})\nexport class SideBarModule {\n}\n","module.exports = \"\"","module.exports = \"\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-signout',\n  templateUrl: './signout.component.html',\n  styleUrls: ['./signout.component.css']\n})\nexport class SignoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SignoutComponent } from './signout.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [SignoutComponent]\n})\nexport class SignoutModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  spot-request-predictor works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spot-request-predictor',\n  templateUrl: './spot-request-predictor.component.html',\n  styleUrls: ['./spot-request-predictor.component.css']\n})\nexport class SpotRequestPredictorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SpotRequestPredictorComponent } from './spot-request-predictor.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [SpotRequestPredictorComponent]\n})\nexport class SpotRequestPredictorModule { }\n","module.exports = \"\"","module.exports = \"<mat-card  id=\\\"stage\\\"><h1>SPINUT</h1></mat-card>\\n<!--<img src=\\\"dist/Spotify/assets/images/spotInstances.png\\\">-->\\n<mat-divider></mat-divider>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-title-bar',\n  templateUrl: './title-bar.component.html',\n  styleUrls: ['./title-bar.component.css']\n})\nexport class TitleBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {TitleBarComponent} from './title-bar.component';\nimport {CustomMaterialModule} from '../custom-material/custom-material.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CustomMaterialModule\n  ],\n  declarations: [\n    TitleBarComponent\n  ],\n  exports: [\n    TitleBarComponent\n  ]\n})\nexport class TitleBarModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false, baseUrl : '/spot'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}